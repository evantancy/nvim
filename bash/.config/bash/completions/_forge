_forge() {
    local i cur prev opts cmds
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    cmd=""
    opts=""

    for i in ${COMP_WORDS[@]}
    do
        case "${i}" in
            "$1")
                cmd="forge"
                ;;
            bind)
                cmd+="__bind"
                ;;
            build)
                cmd+="__build"
                ;;
            clean)
                cmd+="__clean"
                ;;
            completions)
                cmd+="__completions"
                ;;
            config)
                cmd+="__config"
                ;;
            create)
                cmd+="__create"
                ;;
            flatten)
                cmd+="__flatten"
                ;;
            help)
                cmd+="__help"
                ;;
            init)
                cmd+="__init"
                ;;
            inspect)
                cmd+="__inspect"
                ;;
            install)
                cmd+="__install"
                ;;
            remappings)
                cmd+="__remappings"
                ;;
            remove)
                cmd+="__remove"
                ;;
            run)
                cmd+="__run"
                ;;
            snapshot)
                cmd+="__snapshot"
                ;;
            test)
                cmd+="__test"
                ;;
            tree)
                cmd+="__tree"
                ;;
            update)
                cmd+="__update"
                ;;
            verify-check)
                cmd+="__verify__check"
                ;;
            verify-contract)
                cmd+="__verify__contract"
                ;;
            *)
                ;;
        esac
    done

    case "${cmd}" in
        forge)
            opts="-h -V --help --version test bind build run update install remove remappings verify-contract verify-check create init completions clean snapshot config flatten inspect tree help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 1 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__bind)
            opts="-b -h --root --bindings-path --crate-name --crate-version --module --overwrite --single-file --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --bindings-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -b)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --crate-name)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --crate-version)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__build)
            opts="-c -r -o -d -w -h --force --libraries --evm-version --optimize --optimizer-runs --extra-output --extra-output-files --ignored-error-codes --no-auto-detect --use --offline --via-ir --root --contracts --remappings --remappings-env --cache-path --lib-paths --hardhat --config-path --out --revert-strings --names --sizes --delay --no-restart --run-all --watch --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --libraries)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --evm-version)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --optimizer-runs)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output-files)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --ignored-error-codes)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --use)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --contracts)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -c)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -r)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings-env)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --cache-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --lib-paths)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --config-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --out)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -o)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --revert-strings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --delay)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -d)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --watch)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -w)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__clean)
            opts="-h --root --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__completions)
            opts="-h --help bash elvish fish powershell zsh"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__config)
            opts="-c -r -o -d -w -f -v -h --json --basic --force --libraries --evm-version --optimize --optimizer-runs --extra-output --extra-output-files --ignored-error-codes --no-auto-detect --use --offline --via-ir --root --contracts --remappings --remappings-env --cache-path --lib-paths --hardhat --config-path --out --revert-strings --names --sizes --delay --no-restart --run-all --watch --fork-url --fork-block-number --no-storage-caching --initial-balance --sender --ffi --verbosity --gas-limit --chain-id --gas-price --block-base-fee-per-gas --tx-origin --block-coinbase --block-timestamp --block-number --block-difficulty --block-gas-limit --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --libraries)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --evm-version)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --optimizer-runs)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output-files)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --ignored-error-codes)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --use)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --contracts)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -c)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -r)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings-env)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --cache-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --lib-paths)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --config-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --out)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -o)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --revert-strings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --delay)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -d)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --watch)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -w)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --fork-url)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -f)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --fork-block-number)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --initial-balance)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --sender)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --gas-limit)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --chain-id)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --gas-price)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-base-fee-per-gas)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --tx-origin)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-coinbase)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-timestamp)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-number)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-difficulty)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-gas-limit)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__create)
            opts="-c -r -o -i -l -t -f -h --constructor-args --constructor-args-path --legacy --gas-price --gas-limit --priority-fee --value --force --libraries --evm-version --optimize --optimizer-runs --extra-output --extra-output-files --ignored-error-codes --no-auto-detect --use --offline --via-ir --root --contracts --remappings --remappings-env --cache-path --lib-paths --hardhat --config-path --out --revert-strings --rpc-url --flashbots --etherscan-api-key --chain --interactive --private-key --mnemonic-path --mnemonic-index --keystore --password --ledger --trezor --hd-path --from --json --help <CONTRACT>"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --constructor-args)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --constructor-args-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --gas-price)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --gas-limit)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --priority-fee)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --value)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --libraries)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --evm-version)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --optimizer-runs)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output-files)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --ignored-error-codes)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --use)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --contracts)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -c)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -r)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings-env)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --cache-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --lib-paths)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --config-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --out)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -o)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --revert-strings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --rpc-url)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --etherscan-api-key)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --chain)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --private-key)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --mnemonic-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --mnemonic-index)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --keystore)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --password)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --hd-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --from)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -f)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__flatten)
            opts="-o -c -r -h --output --root --contracts --remappings --remappings-env --cache-path --lib-paths --hardhat --config-path --help <TARGET_PATH>"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --output)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -o)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --contracts)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -c)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -r)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings-env)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --cache-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --lib-paths)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --config-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__help)
            opts="<SUBCOMMAND>..."
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__init)
            opts="-t -q -h --template --no-git --no-commit --quiet --offline --force --vscode --help <ROOT>"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --template)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -t)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__inspect)
            opts="-c -r -o -h --force --libraries --evm-version --optimize --optimizer-runs --extra-output --extra-output-files --ignored-error-codes --no-auto-detect --use --offline --via-ir --root --contracts --remappings --remappings-env --cache-path --lib-paths --hardhat --config-path --out --revert-strings --help <CONTRACT> <FIELD>"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --libraries)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --evm-version)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --optimizer-runs)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output-files)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --ignored-error-codes)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --use)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --contracts)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -c)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -r)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings-env)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --cache-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --lib-paths)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --config-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --out)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -o)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --revert-strings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__install)
            opts="-q -h --no-git --no-commit --quiet --root --help <DEPENDENCIES>..."
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__remappings)
            opts="-h --root --lib-path --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --lib-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__remove)
            opts="-h --help <DEPENDENCIES>..."
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__run)
            opts="-t -s -c -r -o -f -v -h --target-contract --sig --debug --force --libraries --evm-version --optimize --optimizer-runs --extra-output --extra-output-files --ignored-error-codes --no-auto-detect --use --offline --via-ir --root --contracts --remappings --remappings-env --cache-path --lib-paths --hardhat --config-path --out --revert-strings --fork-url --fork-block-number --no-storage-caching --initial-balance --sender --ffi --verbosity --gas-limit --chain-id --gas-price --block-base-fee-per-gas --tx-origin --block-coinbase --block-timestamp --block-number --block-difficulty --block-gas-limit --help <PATH> <ARGS>..."
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --target-contract)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -t)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --sig)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -s)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --libraries)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --evm-version)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --optimizer-runs)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output-files)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --ignored-error-codes)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --use)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --contracts)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -c)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -r)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings-env)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --cache-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --lib-paths)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --config-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --out)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -o)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --revert-strings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --fork-url)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -f)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --fork-block-number)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --initial-balance)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --sender)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --gas-limit)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --chain-id)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --gas-price)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-base-fee-per-gas)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --tx-origin)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-coinbase)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-timestamp)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-number)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-difficulty)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-gas-limit)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__snapshot)
            opts="-m -j -f -v -c -r -o -d -w -h --match --match-test --no-match-test --match-contract --no-match-contract --match-path --no-match-path --debug --gas-report --allow-failure --json --fork-url --fork-block-number --no-storage-caching --initial-balance --sender --ffi --verbosity --gas-limit --chain-id --gas-price --block-base-fee-per-gas --tx-origin --block-coinbase --block-timestamp --block-number --block-difficulty --block-gas-limit --etherscan-api-key --force --libraries --evm-version --optimize --optimizer-runs --extra-output --extra-output-files --ignored-error-codes --no-auto-detect --use --offline --via-ir --root --contracts --remappings --remappings-env --cache-path --lib-paths --hardhat --config-path --out --revert-strings --delay --no-restart --run-all --watch --asc --desc --min --max --diff --check --format --snap --include-fuzz-tests --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --match)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -m)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --match-test)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --no-match-test)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --match-contract)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --no-match-contract)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --match-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --no-match-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --debug)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --fork-url)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -f)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --fork-block-number)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --initial-balance)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --sender)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --gas-limit)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --chain-id)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --gas-price)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-base-fee-per-gas)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --tx-origin)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-coinbase)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-timestamp)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-number)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-difficulty)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-gas-limit)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --etherscan-api-key)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --libraries)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --evm-version)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --optimizer-runs)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output-files)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --ignored-error-codes)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --use)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --contracts)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -c)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -r)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings-env)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --cache-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --lib-paths)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --config-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --out)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -o)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --revert-strings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --delay)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -d)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --watch)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -w)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --min)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --max)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --diff)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --check)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --format)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --snap)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__test)
            opts="-m -j -f -v -c -r -o -d -w -h --match --match-test --no-match-test --match-contract --no-match-contract --match-path --no-match-path --debug --gas-report --allow-failure --json --fork-url --fork-block-number --no-storage-caching --initial-balance --sender --ffi --verbosity --gas-limit --chain-id --gas-price --block-base-fee-per-gas --tx-origin --block-coinbase --block-timestamp --block-number --block-difficulty --block-gas-limit --etherscan-api-key --force --libraries --evm-version --optimize --optimizer-runs --extra-output --extra-output-files --ignored-error-codes --no-auto-detect --use --offline --via-ir --root --contracts --remappings --remappings-env --cache-path --lib-paths --hardhat --config-path --out --revert-strings --delay --no-restart --run-all --watch --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --match)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -m)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --match-test)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --no-match-test)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --match-contract)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --no-match-contract)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --match-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --no-match-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --debug)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --fork-url)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -f)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --fork-block-number)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --initial-balance)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --sender)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --gas-limit)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --chain-id)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --gas-price)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-base-fee-per-gas)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --tx-origin)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-coinbase)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-timestamp)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-number)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-difficulty)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --block-gas-limit)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --etherscan-api-key)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --libraries)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --evm-version)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --optimizer-runs)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --extra-output-files)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --ignored-error-codes)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --use)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --contracts)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -c)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -r)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings-env)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --cache-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --lib-paths)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --config-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --out)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -o)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --revert-strings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --delay)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -d)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --watch)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -w)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__tree)
            opts="-c -r -h --no-dedupe --charset --root --contracts --remappings --remappings-env --cache-path --lib-paths --hardhat --config-path --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --charset)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --contracts)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -c)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -r)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings-env)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --cache-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --lib-paths)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --config-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__update)
            opts="-h --help <LIB>"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__verify__check)
            opts="-h --chain --help <GUID> <ETHERSCAN_KEY>"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --chain)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        forge__verify__contract)
            opts="-f -c -r -h --constructor-args --compiler-version --num-of-optimizations --chain --flatten --force --root --contracts --remappings --remappings-env --cache-path --lib-paths --hardhat --config-path --help <ADDRESS> <CONTRACT> <ETHERSCAN_KEY>"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --constructor-args)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --compiler-version)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --num-of-optimizations)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --chain)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --root)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --contracts)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -c)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -r)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --remappings-env)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --cache-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --lib-paths)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --config-path)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
    esac
}

complete -F _forge -o bashdefault -o default forge
